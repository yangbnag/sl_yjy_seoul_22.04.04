https://github.com/sokoving/SnackManageProgram.git
 
// 사원 관리자
        e[5] = new Employee("00000", "1238e", "송민호", "abx@naver.com", "영업","대리",0);
// 간식 관리자
        e[6] = new Employee("00001", "1238e", "송민호", "abx@naver.com", "영업","대리",0);
// 일반 사원
        e[3] = new Employee("00005", "1237d", "윤이슬", "abq@naver.com", "인사", "주임", 0);

=====================================================================

안녕하십니까.
기업 간식관리 프로그램 SnackManger 발표를 맡은 주식회사 투게더의 양재영 입니다.
================

저희팀은
개요 - 프로젝트상세 - 앞으로의 방향성 - 발표를 마치며 순으로 발표를 준비하였습니다.
=====================

먼저 팀원 소개를 하겠습니다.
저희 팀은 총 3명으로 서해원, 채여운, 양재영 으로 구성 되었으며

이번 프로젝트에서 각자
해원씨는 로그인 시스템과 사원시스템을

여운씨는 아이디어 제시와 간식관리자 시스템을

저는 ppt제작 / 발표를 맡았고 

오류 검증 및 수정은 다같이 진행했습니다.
====================

 프로그램에 대해 설명해드리겠습니다.
===================
이 프로그램을 개발하게 된 의도는 회사가 직원에게 간식을 지급하여
직원들의 사기와 생산성을 높일 수 있도록 하는 체계적인 간식 관리 프로그램을 제작하고 싶었습니다.

간식 복지는 사무실의 소소하지만 확실한 행복이라고 생각합니다.
저희 Together의 간식 관리 프로그램은 체계적으로 간식을 관리해 탕비실 이용시 직원들의 불만이 
발생하지 않도록 최상의 서비스를 제공 할 것입니다.
==================

저희 프로그램 제품 설명서를 살펴보도록 하겠습니다.
=============

먼저 프로그램 구상도 입니다.
로그인을 통해 사원과 관리자가 처리할수 있는 기능들이 달라 집니다.
사원은 간식재고조회, 간식비 계좌조회, 간식 구입, 간식 요청의 기능을 수행 할 수 있습니다.

간식관리자는 탕비실 재고관리, 간식 신청서 관리, 간식 구입, 간식비 조회를 할수 있습니다.

사원관리자는 직원정보 조회, 정보수정, 입 퇴사 직원처리 및 간식비를 관리 할 수 있습니다.

사원관리자를 통하여 새로운 직원들과 퇴사한 직원들 관리가 가능 합니다.
=================

주요 사용구문 입니다.
저희는 Java를 사용 하였고, 많은량의 데이터를 관리하기 위해 배열을 적극적으로 사용 하였습니다.
[사원 정보, 간식재고 정보, 간식비예산 내역등에 배열을 활용 하였습니다.]
======================

프로그램 시연전에 주요 사용 구문에 대해 설명해 드리도록 하겠습니다.

메인프로그램에서 로그인 알고리즘
1. 입력받은 사원 번호가 있는지 확인 하고
2. 입력된 사원 번호와 비밀번호 일치 여부 확인 후
3. if문의 결과로 rank가 0이면 사원 1이면 사원관리자 2이면 간식관리자에 접근 할 수 있게 됩니다.

4번 박스는 사원관리자의 메인 페이지 화면 이고
5번 박스는 간식 관리자의 메인페이지 입니다.

각 메뉴는 메서드를 통해 수행 되게 됩니다.
=====================================

간식관리에서 간식재고 관리 입니다.
Sncak 클래스는 이름, 가격, 재고의 필드를 가지며
클래스 생성시 이름, 가격, 재고를 입력 받습니다.

SncakPantry 클래스는 Snack 데이터를 저장할 수 있는 배열과
snacks에 실제 있는 데이터의 수를 저장 하는 필드
그리고 사원이 간식을 사고 낸 돈을 저장하는 필드를 가지며

SncakPantry 생성시 snacks 배열을 만들고 테스트 용으로 미리 간식 데이터를 넣어둡니다.
===================

 메인 프로그램을 생성할 때 팬트리도 같이 생성되며
 다른 클래스에도 팬트리를 인수로 넣어 팬트리 데이터를 공유할 수 있게 하였습니다.
================================

간식재고관리 컨트롤러 역할을 하는 SnackPage 입니다. ★

SnackPage의 필드로 SnackPantry pantry를 넣고
SnackPage를 생성할 때 매개변수로 SnackPantry를 받습니다.

★SnackPage의 this.pantry에 SnackProgramMain에서 인수로 받은 pantry를 대입해 데이터를 연동 합니다.★
============================

SnackPage에서 탕비실 재고관리를 하는 managePantryStock() 실행 예시 입니다. 
======================

사원관리에서는 간식비를 송금하는 기능을 담당합니다.
간식비를 송금했을때 그 내역을  저장하고 조회 할 수 있는 기능에 대해 설명해드리겠습니다.

임플로이그룹페이먼트는 전직원에게 간식비 5만원을 송금하는 기능입니다.
그룹페이먼트가 실행되어 전직원에게 일괄 지급이 되면
예산을 저장 하는 list에 인서트 함수를 통해시간과 내역 송금 금액이 저장 됩니다.
=========================

스페셜페이먼트 메서드는 특정 직원에게 간식비를 지급합니다.
list에 인서트 함수를 사용하여 시관, 내역, 금액을 저장 합니다.
==============

프린트버짓 메서드는 
저장된 송금 내역을 임플로이매니저 클래스에 있는 프린트스낵코스트 메서드를 통해 출력 하여
간식비 예산과 내역을 출력하여 사용자에게 보여 줍니다. 
=================

프로그램 시연 후
===================


===================
어려웠던 점
- 서로 같은 페이지를 작업할 경우 병합할 때 충돌 문제가 생김

- 프로그램 구현을 위해 클래스를 설계하고 클래스 간 같은 데이터를 쓰게 하는 연동 작업이 어려웠다


===================
기능 추가
- 현재 타입을 다르게 입력하면 인풋에러가 나며 프로그램 종료되는 
  문제가 있음. [해결해야 함.]



- 유통기한 체크, 수량이 떨어지면 자동주문, 더 많은 종류의 간식 추가 등
  간식 관리 기능 확대. 



- 현재 스낵프로그램메인 한 클래스가 데이터 생성과 화면 출력을 동시에 
  수행하고 있다. 그 기능들을 분리해 객체지향 시스템을 강화시키고 싶다.

===============

느낀점
간단한 프로젝트라 객체 생성/수정하는데 
큰 문제가 없었지만 나중에 더욱 복잡한 구조를 가진 프로젝트를 할때는 
개발자 간의 충돌도 많이 일어나고, 객체를 이해하고 사용하는데 문제가 
많을 것같다고 느꼈습니다.






